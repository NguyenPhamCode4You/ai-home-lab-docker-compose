volumes:
  n8n_storage:
  ollama_storage:
  postgres_storage:
  qdrant_storage:
  sqlserver_storage:
  jupyter_lab_storage:
  nextcloud_storage:
  open-webui:
  langflow:
  langflow-db:

networks:
  homelab:
    driver: bridge

services:
  dashy:
    image: lissy93/dashy:latest
    container_name: my-dashboard
    networks:
      - homelab
    ports:
      - "8080:8080"
    volumes:
      - ./lab404.yml:/app/user-data/conf.yml
    restart: always

  next-cloud:
    image: nextcloud
    container_name: next-cloud
    networks:
      - homelab
    ports:
      - "8081:80"
    links:
      - postgres
    volumes:
      - nextcloud_storage:/var/www/html
    environment:
      - NEXTCLOUD_ADMIN_USER=admin
      - NEXTCLOUD_ADMIN_PASSWORD=admin
      - OVERWRITEHOST=172.20.37.3:8081
    restart: always

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    networks:
      - homelab
    volumes:
      - ollama_storage:/root/.ollama
    restart: always
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD-SHELL", "nvidia-smi || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  open-web-ui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-web-ui
    networks:
      - homelab
    ports:
      - "11435:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
    volumes:
      - open-webui:/app/backend/data
    restart: always

  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    networks:
      - homelab
    ports:
      - "5678:5678"
    volumes:
      - n8n_storage:/home/node/.n8n
    environment:
      - N8N_SECURE_COOKIE=false
    restart: always

  qlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver
    networks:
      - homelab
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Your_password123
    volumes:
      - sqlserver_storage:/var/opt/mssql
    restart: always

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5433:5432"
    networks:
      - homelab
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Your_password123
      - POSTGRES_DB=postgres
    volumes:
      - postgres_storage:/var/lib/postgresql/data

  langflow-db:
    networks:
      - homelab
    image: postgres:16-alpine
    container_name: langflow-db
    hostname: langflow-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - langflow-db:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_DB: langflow-db
      POSTGRES_USER: langflow-db
      POSTGRES_PASSWORD: langflow-db
    restart: on-failure:5

  langflow:
    image: langflowai/langflow:latest
    container_name: langflow
    user: root
    ports:
      - 7860:7860
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/7860' || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    restart: on-failure:5
    depends_on:
      - langflow-db
    environment:
      LANGFLOW_DATABASE_URL: postgresql://langflow-db:langflow-db@langflow-db:5433/langflow-db?sslmode=disable
      LANGFLOW_CONFIG_DIR: /var/lib/langflow
      LANGFLOW_SUPERUSER: langflow
      LANGFLOW_SUPERUSER_PASSWORD: langflow
      LANGFLOW_AUTO_LOGIN: True
    volumes:
      - langflow:/var/lib/langflow:rw

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks:
      - homelab
    restart: always
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  jupyter-lab:
    build:
      context: .
      dockerfile: jupyter.Dockerfile
    container_name: jupyter-lab
    user: root
    networks:
      - homelab
    ports:
      - "8883:8888"
    volumes:
      - ./jupyter-lab:/home/jovyan/work
      - jupyter_lab_storage:/home/jovyan
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=123456
      - SUDO_PASSWORD=123456
      - GRANT_SUDO=yes
    command: start-notebook.py --NotebookApp.token='123456'
    restart: always
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD-SHELL", "nvidia-smi || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

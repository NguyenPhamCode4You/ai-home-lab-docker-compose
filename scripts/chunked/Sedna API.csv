Sedna API,content
0,This document is designed to be a high level overview of leveraging Sedna's API's for Document management purposes.
1,Save time by allowing the users to complete a simple action to save documents within an alternate system. 
2,Using a common reference you allow ease of filing structure that is consistent across the business.
3,"Sedna's APIs allow you to be able to create integrations with your business systems to provide efficiency, accuracy and context gains. "
4,Create a Sedna App to be able to insert documents directly into emails from an alternate system saving time and context switching.  
5,Sedna recommends the following 3 options for leveraging these APIs in the Document Management space.
6,Job Reference Tag is a green tag within Sedna used to group messages. 
7,It groups messages related to a business transaction.  
8,Category Tag      A blue tag within Sedna that is used to add additional context to a message.
9,"Attributes        This is the meta data held within a Job Reference, such as Vessel Name, Voyage Reference, Linkage ID or CP Date. "
10,Message ID        This is a unique number that each message inside Sedna is given upon ingest.  
11,This is a unique number that each Job Reference Tag is given upon creation 
12,This is a unique number that each Category Tag is given upon creation 
13,Message Shared Within Sedna a message can be visible to multiple different mailboxes. 
14,Sharing a message allows the message to be visible to another mailbox as specified.   
15,An event is something that is triggered by an action in your Sedna system  
16,This is a list of current events happening within your Sedna System. 
17,This can                                                                                  
18,This is a specific access point to an entity within your Sedna System.       
19,Using Sedna's Event Stream API we allow users to control the saving of documentation in a simple quick action. 
20,You can use this to save documents into an alternate system and also create a repository of documents.
21,Sedna should be set up with two things to allow this method to be efficient: Job Reference Tags linked to a business transaction and Category Tags that align with where you would like to categorise the Document.
22,You will use the Job Reference and its attributes plus the Category Tag to retrieve the message ID for download. 
23,Below is a high level overview of the flow of this use case.  
24,The coloured flow is related to the end user and the grey flow is related to the flow of the automation.
25,Use the event endpoint to capture real time events. 
26,An event is something that is triggered by an action in your tenant such as sending a message or adding a tag.
27,This endpoint is designed to catch events in real time as they occur. 
28,Sedna preserves one month of events so actions to be completed based on events should be taken within this timeframe.  
29,- Message received - event.message.received
30,- Message scheduled (for sending) - event.message.message\_scheduled
31,- Message sent - event.message.sent
32,- Message shared - event.message.shared
33,- Category tag added - event.message.tag.added.category
34,- Category tag removed - event.message.tag.removed.category
35,- Job reference added - event.message.tag.added.job-reference
36,- Job reference removed - event.message.tag.removed.job-reference
37,- Draft edited - event.message.draft.edited
38,- Category tag added endpoint looking for the specific Category tag ID identified
39,- Read latest events endpoint [GET] {{baseUrl}}/platform/2019-01-01/event/latest 
40,- Loop on the 'next' links. Check on each iteration if anything has changed. 
41,- Note - SEDNA plans to implement webhooks for events in the future. This will eliminate the need for a polling loop on events.
42,"public function loop\_events() { $loop\_wait = 1; //Seconds //Get the latest event $url = $this->base\_url . ""/event/latest""; $r = $this->api\_get($url); $url = $r['links']['next']; //This sets us on the current cursor which we'll loop $last\_id = ''; do { $r = $this->api\_get($url); foreach($r['data'] as $ix=>$data) { $id = $data['id']; //If not a new message wait a sec and restart the loop if ($id == $last\_id) {sleep($loop\_wait); continue;}"
43,//Get basic event metadata $atts = $data['attributes']; $time = $atts['time']; $eventType = $atts['eventType']; //Only deal with incoming messages using the below //if ($eventType <> 'event.message.received') continue; 
44,"//Get the message subject $msg\_id = $data['relationships']['message']['data']['id']; $msg = $this->get\_message($msg\_id); $subject = $msg['data']['attributes']['subject']; echo ""$time $eventType $id $subject ""; } "
45,Once you have the Message ID you can get message information that you need. 
46,This is broken down into two pieces. - 1. The job reference applied to the message - a. [GET] /platform/2019-01-01/message/{{MessageID}}/relationships/job-reference/  - 2. The documents attached to the message - a. [GET] /platform/2019-01-01/message/{{MessageID}}/relationships/document/
47,"You can also use this to find the category tags applied if you wish to use them to add extra information for the file path for example, save - final documents, save - recap. "
48,This can be done using: [GET] /platform/2019-01-01/message/{{MessageID}}/relationships/category-tag/
49,Using the same document endpoint above you would then download the attachments (documents)
50,"public function download\_document($in\_document\_id, $in\_file\_loc = '/tmp/sedna\_merge') { //Create destination $in\_file\_loc if it doesn't exists if (!file\_exists($in\_file\_loc)) mkdir($in\_file\_loc,0777); //Download the file to the directory given by $in\_file\_loc $url = $this->base\_url . ""/download/document/$in\_document\_id""; $output\_file = ""$in\_file\_loc/$in\_document\_id.pdf""; $r = $this->api\_download($url,$output\_file); //api\_download in appendix below return $output\_file; }"
51,The job reference is related to the business transaction so should give you the path to finding the record to upload to.
52,- ‚óè Job Reference Endpoint [GET] {{baseurl}}/platform/2019-01-01/job-reference 
53,"{ ""data"": { ""type"": ""job-reference"", ""attributes"": { ""name"": ""Vessel Name. - 2202"", ""archived"": false , ""date"": null , ""type"": ""voyage"", ""foreignKey"": ""1667622"", ""attributes"": { ""type"": ""DEFAULT"", ""vesselName"": ""Vessel Name"", ""displayName"": ""Vessel Name - 2202"", ""voyageNumber"": ""2202"", ""imo"": ""930215"" } } } }"
54,Field ref   | Field Name   | Description                                                                                                                                   | Format                                                                       | Examples                                                                                                                | Source      |  
55,Container for all field ids
56,All Job Reference attributes 
57,Job Reference name is a String.
58,Created Date associated with transaction is Iso 8601.
59,Job Reference type is a String value.
60,Unique id relating to alternate system is a String.  
61,These are self describing key value pairs. 
62,"Other key value pairs may be included for future use, see format for string length constraint."
63,Two values expected. 
64,"""True"" means Job Reference will not be  Allowed values ""true"" or ""false"".   "
65,"Job Reference will be considered by Auto-taggers if set to ""True""  "
66,Refers to all Data provided to API 
67,The data.attributes.name value is what shows as the job reference in SEDNA. 
68,The data.type value should indicate the type of job reference.
69,These 3 pieces of information should give you the ability to save the documents to your alternate system.
70,The category tag event is the trigger that indicates the message or documents should be saved.
71,The message id allows you to find the job reference id and the documents to be downloaded.
72,"The job reference attributes gives you the information to guide you to where the document should be saved for example, using the Vessel name and the reference number.  "
